{"version":3,"file":"main.js","mappings":"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","sources":["webpack://webpack-vanilla-js-template/./src/index.js","webpack://webpack-vanilla-js-template/./src/getData.js","webpack://webpack-vanilla-js-template/./src/createGameOverScreenElement.js","webpack://webpack-vanilla-js-template/./src/createMainScreenElement.js"],"sourcesContent":["import { createMainScreenElement } from \"./createMainScreenElement\";\r\nimport { getData } from \"./getData\";\r\nimport { createGameOverScreenElement } from \"./createGameOverScreenElement\";\r\n\r\nconst mainContainer = document.querySelector(\".main-container\");\r\nlet questionCounter = 0;\r\nlet correctCounter = 0;\r\nlet qArray = [];\r\n\r\ninit();\r\n\r\nfunction incrementQuestionCounter() {\r\n  questionCounter++;\r\n  return questionCounter;\r\n}\r\n\r\nfunction init() {\r\n  correctCounter = 0;\r\n  mainContainer.innerHTML = \"\";\r\n  mainContainer.appendChild(createMainScreenElement());\r\n}\r\n\r\n// begin button event handler\r\nconst startButton = document.querySelector(\".start-button\");\r\nstartButton.addEventListener(\"click\", () => {\r\n  begin();\r\n});\r\n\r\n//\r\nasync function begin() {\r\n  try {\r\n    const response = await getData();\r\n    const data = await response.json();\r\n    const questions = createQuestions(data);\r\n    populateQuestion(questions[questionCounter]);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction createQuestions(obj) {\r\n  const [...questionsArray] = obj.results;\r\n  // console.log(questionsArray);\r\n  [...qArray] = questionsArray;\r\n  console.log(qArray);\r\n  return questionsArray;\r\n}\r\n\r\nfunction populateQuestion(obj) {\r\n  // console.log(obj.category);\r\n  mainContainer.innerHTML = \"\";\r\n  mainContainer.appendChild(questionUI(obj));\r\n}\r\n\r\nfunction createChoices(obj) {\r\n  // make an array of incorrect and correct answers\r\n  const [...choices] = obj.incorrect_answers;\r\n  choices.push(obj.correct_answer);\r\n\r\n  // shuffle the array using Knuth Shuffle\r\n  const shuffled = shuffle(choices);\r\n\r\n  return shuffled;\r\n}\r\n\r\nfunction questionUI(obj) {\r\n  // create question container element\r\n  const questionContainer = document.createElement(\"div\");\r\n  questionContainer.classList.add(\"question-container\");\r\n\r\n  // create the content of the container\r\n  const category = document.createElement(\"h3\");\r\n  category.classList.add(\"category\");\r\n  category.textContent = `${decode(obj.category)}`;\r\n  questionContainer.appendChild(category);\r\n\r\n  const difficulty = document.createElement(\"p\");\r\n  difficulty.classList.add(\"difficulty\");\r\n  difficulty.textContent = `difficulty: ${decode(\r\n    obj.difficulty,\r\n  ).toUpperCase()}`;\r\n  questionContainer.appendChild(difficulty);\r\n\r\n  const question = document.createElement(\"p\");\r\n  question.classList.add(\"question\");\r\n  question.textContent = `${decode(obj.question)}`;\r\n  questionContainer.appendChild(question);\r\n\r\n  // create the choices and the elements\r\n  const choices = createChoices(obj);\r\n  choices.forEach((choice, index) => {\r\n    const choiceOfAnswer = document.createElement(\"div\");\r\n    choiceOfAnswer.classList.add(\"choice\");\r\n\r\n    const radio = document.createElement(\"input\");\r\n    radio.type = \"radio\";\r\n    radio.id = `${index}`;\r\n    radio.name = \"choice\";\r\n    radio.value = `${index}`;\r\n\r\n    const label = document.createElement(\"label\");\r\n    label.setAttribute(\"for\", `${index}`);\r\n    label.setAttribute(\"data-value\", `${index}`);\r\n    label.textContent = decode(choice);\r\n    label.addEventListener(\"click\", (e) => {\r\n      updateQuestionUI(e);\r\n    });\r\n\r\n    choiceOfAnswer.appendChild(radio);\r\n    choiceOfAnswer.appendChild(label);\r\n    questionContainer.appendChild(choiceOfAnswer);\r\n  });\r\n\r\n  // create a placeholder element to display correct or wrong\r\n  const correct = document.createElement(\"p\");\r\n  correct.classList.add(\"correct\");\r\n  questionContainer.appendChild(correct);\r\n\r\n  // return the container element\r\n  return questionContainer;\r\n}\r\n\r\nfunction shuffle(arr) {\r\n  let m = arr.length;\r\n  let t;\r\n  let i;\r\n\r\n  // While there remain elements to shuffle…\r\n  while (m) {\r\n    // Pick a remaining element…\r\n    i = Math.floor(Math.random() * m--);\r\n\r\n    // And swap it with the current element.\r\n    t = arr[m];\r\n    arr[m] = arr[i];\r\n    arr[i] = t;\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nfunction checkIfCorrect(e) {\r\n  console.log(e.target.textContent);\r\n  const cor = qArray[questionCounter].correct_answer;\r\n  if (e.target.textContent === decode(cor)) {\r\n    e.target.classList.add(\"right\");\r\n    disableChoices();\r\n    correctCounter++;\r\n    getAnswerFeedback(\"correct\");\r\n  } else {\r\n    e.target.classList.add(\"wrong\");\r\n\r\n    // finding the \"right element\" and making it green\r\n    const choiceList = document.querySelectorAll(\".choice\");\r\n    const choiceListArr = Array.from(choiceList);\r\n    const index = choiceListArr.findIndex(\r\n      (element) => element.lastChild.textContent === decode(cor),\r\n    );\r\n    choiceListArr[index].lastChild.classList.add(\"right\");\r\n\r\n    disableChoices();\r\n\r\n    getAnswerFeedback(\"incorrect\");\r\n    console.log(\"incorrect\");\r\n  }\r\n}\r\n\r\nfunction getAnswerFeedback(str) {\r\n  const answerFeedback = document.querySelector(\".correct\");\r\n  if (str === \"correct\") {\r\n    answerFeedback.textContent = \"CORRECT\";\r\n    answerFeedback.classList.add(\"right-answer\");\r\n  } else {\r\n    answerFeedback.textContent = \"INCORRECT\";\r\n    answerFeedback.classList.add(\"wrong-answer\");\r\n  }\r\n}\r\n\r\nfunction updateQuestionUI(e) {\r\n  checkIfCorrect(e);\r\n  if (questionCounter < 9) {\r\n    setTimeout(() => {\r\n      populateQuestion(qArray[incrementQuestionCounter()]);\r\n    }, 2500);\r\n  } else {\r\n    gameOver();\r\n  }\r\n}\r\n\r\nfunction disableChoices() {\r\n  const choices = document.querySelectorAll(\".choice\");\r\n  const choicesArray = Array.from(choices);\r\n  choicesArray.forEach((element) => {\r\n    element.style.pointerEvents = \"none\";\r\n  });\r\n}\r\n\r\nfunction gameOver() {\r\n  mainContainer.innerHTML = \"\";\r\n  mainContainer.appendChild(createGameOverScreenElement(correctCounter));\r\n  correctCounter = 0;\r\n  questionCounter = 0;\r\n\r\n  // retry button event handler\r\n  const startButton = document.querySelector(\".start-button\");\r\n  startButton.addEventListener(\"click\", () => {\r\n    begin();\r\n  });\r\n}\r\n\r\nfunction decode(data) {\r\n  const tempElement = document.createElement(\"div\");\r\n  tempElement.innerHTML = data;\r\n  const decoded = tempElement.textContent;\r\n  return decoded;\r\n}\r\n\r\n// listen to user input\r\n// const proposedAnswers = document.querySelectorAll(\"input\");\r\n// const proposedAnswersArray = Array.from(proposedAnswers);\r\n// proposedAnswersArray.forEach((proposedAnswer) => {\r\n//     proposedAnswer.addEventListener(\"checked\", () => {\r\n//         incrementQuestionCounter();\r\n//     });\r\n// });\r\n","async function getData() {\r\n    try {\r\n        const response = await fetch(\"https://opentdb.com/api.php?amount=10&type=multiple\", { mode : \"cors\" });\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport {getData};","function createGameOverScreenElement(score) {\r\n    // create the main screen div element\r\n    const mainScreen = document.createElement(\"div\");\r\n    mainScreen.classList.add(\"main-screen\");\r\n\r\n    // create the score element\r\n    const scoreElement = document.createElement(\"p\");\r\n    scoreElement.classList.add(\"score\");\r\n    scoreElement.textContent = `${score}/10`\r\n    const scoreFeedback = document.createElement(\"p\");\r\n    scoreFeedback.classList.add(\"feedback\")\r\n    scoreFeedback.textContent = getScoreFeedback(score);\r\n    \r\n    // create the retry button\r\n    const startButton = document.createElement(\"button\");\r\n    startButton.classList.add(\"start-button\");\r\n    startButton.textContent = \"Retry\";\r\n\r\n    // append each element\r\n    mainScreen.appendChild(scoreElement);\r\n    mainScreen.appendChild(scoreFeedback);\r\n    mainScreen.appendChild(startButton);\r\n\r\n    return mainScreen;\r\n}\r\n\r\nfunction getScoreFeedback(score) {\r\n    if (score < 0 || score > 10) {\r\n      return \"Invalid score. Please provide a score between 0 and 10.\";\r\n    } if (score < 4) {\r\n      return \"You have room for improvement.\";\r\n    } if (score < 7) {\r\n      return \"You're doing alright.\";\r\n    } if (score < 9) {\r\n      return \"Well done!\";\r\n    } \r\n      return \"You're a star!\";\r\n    \r\n  }\r\n\r\nexport {createGameOverScreenElement};","function createMainScreenElement() {\r\n    // create the main screen div element\r\n    const mainScreen = document.createElement(\"div\");\r\n    mainScreen.classList.add(\"main-screen\");\r\n\r\n    // create the logo div element\r\n    const logoContainer = document.createElement(\"div\");\r\n    const gameTitle = document.createElement(\"h1\");\r\n    const slogan = document.createElement(\"p\");\r\n    logoContainer.classList.add(\"logo-container\");\r\n    gameTitle.classList.add(\"game-title\");\r\n    slogan.classList.add(\"slogan\");\r\n    gameTitle.textContent = \"Trivia\";\r\n    slogan.textContent = \"Quiz App: Challenge your Knowledge!\";\r\n    \r\n    // create the begin button\r\n    const startButton = document.createElement(\"button\");\r\n    startButton.classList.add(\"start-button\");\r\n    startButton.textContent = \"Begin\";\r\n\r\n    // append each element\r\n    logoContainer.appendChild(gameTitle);\r\n    logoContainer.appendChild(slogan);\r\n    mainScreen.appendChild(logoContainer);\r\n    mainScreen.appendChild(startButton);\r\n\r\n    return mainScreen;\r\n}\r\n\r\nexport {createMainScreenElement};"],"names":["mainContainer","document","querySelector","questionCounter","correctCounter","qArray","async","begin","response","fetch","mode","error","console","log","getData","populateQuestion","obj","questionsArray","results","createQuestions","json","innerHTML","appendChild","questionContainer","createElement","classList","add","category","textContent","decode","difficulty","toUpperCase","question","choices","incorrect_answers","push","correct_answer","arr","t","i","m","length","Math","floor","random","shuffle","createChoices","forEach","choice","index","choiceOfAnswer","radio","type","id","name","value","label","setAttribute","addEventListener","e","target","cor","disableChoices","getAnswerFeedback","choiceList","querySelectorAll","choiceListArr","Array","from","findIndex","element","lastChild","checkIfCorrect","setTimeout","score","mainScreen","scoreElement","scoreFeedback","getScoreFeedback","startButton","createGameOverScreenElement","gameOver","updateQuestionUI","correct","questionUI","str","answerFeedback","style","pointerEvents","data","tempElement","logoContainer","gameTitle","slogan","createMainScreenElement"],"sourceRoot":""}